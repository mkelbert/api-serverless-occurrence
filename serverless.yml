service: aws-nodejs
provider:
  name: aws
  runtime: nodejs6.10

package:
  exclude:
    - node_modules/**
    - tests/**
    - _example/**
    - src/**
    - LICENSE
    - README.md
    - serverless.yml
    - .babelrc
    # - node_modules/aws-sdk/**
    # - node_modules/base64-js/**
    # - node_modules/buffer/**
    # - node_modules/crypto-browserify/**
    # - node_modules/events/**
    # - node_modules/ieee754/**
    # - node_modules/isarray/**
    # - node_modules/jmespath/**
    # - node_modules/lodash/**
    # - node_modules/punycode/**
    # - node_modules/querystring/**
    # - node_modules/sax/**
    # - node_modules/url/**
    # - node_modules/uuid/**
    # - node_modules/xml2js/**
    # - node_modules/xmlbuilder/**
    # - node_modules/**


functions:
  user:
    handler: dist/handler/user.new
    events:
      - http:
          path: /user/new
          method: post
          integration: lambda
          cors: true

resources:
  Resources:

    #DYNAMODB
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config.js):location.tableUser}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    OcurrenceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config.js):location.tableOccurrence}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    #S3
    S3BucketPhotos:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${file(./config.js):location.bucketPhoto}

plugins:
  - serverless-offline
